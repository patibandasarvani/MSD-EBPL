{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Videos\\\\ebpl-mern-compiler\\\\frontend\\\\src\\\\components\\\\Snippets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Copy, Play, Calendar } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnippetsContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n_c = SnippetsContainer;\nconst SnippetGrid = styled.div`\n  display: grid;\n  gap: 20px;\n  margin-top: 20px;\n`;\n_c2 = SnippetGrid;\nconst SnippetCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n  }\n`;\n_c3 = SnippetCard;\nconst SnippetTitle = styled.h3`\n  color: #2d3748;\n  margin-bottom: 10px;\n`;\n_c4 = SnippetTitle;\nconst SnippetDescription = styled.p`\n  color: #666;\n  margin-bottom: 15px;\n`;\n_c5 = SnippetDescription;\nconst SnippetCode = styled.pre`\n  background: #1e1e1e;\n  color: #d4d4d4;\n  padding: 15px;\n  border-radius: 8px;\n  font-size: 14px;\n  overflow-x: auto;\n  margin-bottom: 15px;\n`;\n_c6 = SnippetCode;\nconst SnippetMeta = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  color: #888;\n  font-size: 14px;\n`;\n_c7 = SnippetMeta;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n_c8 = ButtonGroup;\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  background: #667eea;\n  color: white;\n  cursor: pointer;\n  font-size: 14px;\n\n  &:hover {\n    background: #5a6fd8;\n  }\n`;\n_c9 = Button;\nfunction Snippets() {\n  _s();\n  const [snippets, setSnippets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchSnippets();\n  }, []);\n  const fetchSnippets = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/snippets');\n      setSnippets(response.data);\n    } catch (error) {\n      console.error('Failed to fetch snippets:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const copyToClipboard = code => {\n    navigator.clipboard.writeText(code);\n    alert('Code copied to clipboard!');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading snippets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(SnippetsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDA EBPL Code Snippets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Browse and learn from community examples\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnippetGrid, {\n      children: snippets.map(snippet => /*#__PURE__*/_jsxDEV(SnippetCard, {\n        children: [/*#__PURE__*/_jsxDEV(SnippetTitle, {\n          children: snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnippetDescription, {\n          children: snippet.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnippetCode, {\n          children: snippet.sourceCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnippetMeta, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), new Date(snippet.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => copyToClipboard(snippet.sourceCode),\n            children: [/*#__PURE__*/_jsxDEV(Copy, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), \"Copy Code\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, snippet._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), snippets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666'\n      },\n      children: \"No snippets found. Be the first to create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Snippets, \"/DHqFhdTi9VUEH80wd96/BDZm60=\");\n_c0 = Snippets;\nexport default Snippets;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"SnippetsContainer\");\n$RefreshReg$(_c2, \"SnippetGrid\");\n$RefreshReg$(_c3, \"SnippetCard\");\n$RefreshReg$(_c4, \"SnippetTitle\");\n$RefreshReg$(_c5, \"SnippetDescription\");\n$RefreshReg$(_c6, \"SnippetCode\");\n$RefreshReg$(_c7, \"SnippetMeta\");\n$RefreshReg$(_c8, \"ButtonGroup\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c0, \"Snippets\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","Copy","Play","Calendar","jsxDEV","_jsxDEV","SnippetsContainer","div","_c","SnippetGrid","_c2","SnippetCard","_c3","SnippetTitle","h3","_c4","SnippetDescription","p","_c5","SnippetCode","pre","_c6","SnippetMeta","_c7","ButtonGroup","_c8","Button","button","_c9","Snippets","_s","snippets","setSnippets","loading","setLoading","fetchSnippets","response","get","data","error","console","copyToClipboard","code","navigator","clipboard","writeText","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","snippet","title","description","sourceCode","style","display","alignItems","gap","size","Date","createdAt","toLocaleDateString","onClick","_id","length","textAlign","padding","color","_c0","$RefreshReg$"],"sources":["C:/Users/ASUS/Videos/ebpl-mern-compiler/frontend/src/components/Snippets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Copy, Play, Calendar } from 'lucide-react';\r\n\r\nconst SnippetsContainer = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst SnippetGrid = styled.div`\r\n  display: grid;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst SnippetCard = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst SnippetTitle = styled.h3`\r\n  color: #2d3748;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst SnippetDescription = styled.p`\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SnippetCode = styled.pre`\r\n  background: #1e1e1e;\r\n  color: #d4d4d4;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  overflow-x: auto;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SnippetMeta = styled.div`\r\n  display: flex;\r\n  justify-content: between;\r\n  align-items: center;\r\n  color: #888;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  background: #667eea;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n\r\n  &:hover {\r\n    background: #5a6fd8;\r\n  }\r\n`;\r\n\r\nfunction Snippets() {\r\n  const [snippets, setSnippets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchSnippets();\r\n  }, []);\r\n\r\n  const fetchSnippets = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/snippets');\r\n      setSnippets(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch snippets:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (code) => {\r\n    navigator.clipboard.writeText(code);\r\n    alert('Code copied to clipboard!');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading snippets...</div>;\r\n  }\r\n\r\n  return (\r\n    <SnippetsContainer>\r\n      <h2>📚 EBPL Code Snippets</h2>\r\n      <p>Browse and learn from community examples</p>\r\n\r\n      <SnippetGrid>\r\n        {snippets.map(snippet => (\r\n          <SnippetCard key={snippet._id}>\r\n            <SnippetTitle>{snippet.title}</SnippetTitle>\r\n            <SnippetDescription>{snippet.description}</SnippetDescription>\r\n            \r\n            <SnippetCode>{snippet.sourceCode}</SnippetCode>\r\n            \r\n            <SnippetMeta>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>\r\n                <Calendar size={14} />\r\n                {new Date(snippet.createdAt).toLocaleDateString()}\r\n              </div>\r\n            </SnippetMeta>\r\n\r\n            <ButtonGroup>\r\n              <Button onClick={() => copyToClipboard(snippet.sourceCode)}>\r\n                <Copy size={16} />\r\n                Copy Code\r\n              </Button>\r\n            </ButtonGroup>\r\n          </SnippetCard>\r\n        ))}\r\n      </SnippetGrid>\r\n\r\n      {snippets.length === 0 && (\r\n        <div style={{ textAlign: 'center', padding: '40px', color: '#666' }}>\r\n          No snippets found. Be the first to create one!\r\n        </div>\r\n      )}\r\n    </SnippetsContainer>\r\n  );\r\n}\r\n\r\nexport default Snippets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}