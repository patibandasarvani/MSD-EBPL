{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Videos\\\\ebpl-mern-compiler\\\\frontend\\\\src\\\\components\\\\Compiler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Play, Save, Download, RotateCcw, BookOpen } from 'lucide-react';\n\n// ... (keep all your existing styled components)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Compiler() {\n  _s();\n  const [sourceCode, setSourceCode] = useState('');\n  const [activeTab, setActiveTab] = useState('output');\n  const [output, setOutput] = useState('');\n  const [tokens, setTokens] = useState([]);\n  const [generatedCode, setGeneratedCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showExamples, setShowExamples] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('basics');\n  const [selectedExample, setSelectedExample] = useState(0);\n  React.useEffect(() => {\n    // Load a basic example when component mounts\n    setSourceCode(exampleCategories.basics.examples[0].code);\n  }, []);\n  const compileCode = async () => {\n    setLoading(true);\n    setError('');\n    setOutput('');\n    setTokens([]);\n    setGeneratedCode('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/compiler/compile', {\n        sourceCode\n      });\n      if (response.data.success) {\n        setTokens(response.data.tokens || []);\n        setGeneratedCode(response.data.generatedCode || '');\n\n        // Show execution output if available\n        if (response.data.executionOutput) {\n          setOutput(response.data.executionOutput);\n        } else if (response.data.executionError) {\n          setOutput(`Execution Error:\\n${response.data.executionError}`);\n        } else {\n          setOutput('Compilation successful! Check the other tabs for details.');\n        }\n      } else {\n        setError(response.data.error || 'Compilation failed');\n        setOutput(`Compilation Error: ${response.data.error}`);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to compile code';\n      setError(errorMsg);\n      setOutput(`Error: ${errorMsg}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ... (keep all your other functions: clearAll, saveSnippet, loadExample, copyToClipboard, renderContent)\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'output':\n        return /*#__PURE__*/_jsxDEV(OutputArea, {\n          children: output || 'Output will appear here after compilation...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this);\n      case 'tokens':\n        return /*#__PURE__*/_jsxDEV(OutputArea, {\n          children: tokens.length > 0 ? tokens.join('\\n') : 'No tokens generated yet...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      case 'generated':\n        return /*#__PURE__*/_jsxDEV(OutputArea, {\n          children: generatedCode || 'No generated code yet...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(OutputArea, {\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // ... (rest of your component JSX)\n}\n_s(Compiler, \"oFV3h03vl2QISW7ZYnWEuttOihQ=\");\n_c = Compiler;\nexport default Compiler;\nvar _c;\n$RefreshReg$(_c, \"Compiler\");","map":{"version":3,"names":["React","useState","styled","axios","Play","Save","Download","RotateCcw","BookOpen","jsxDEV","_jsxDEV","Compiler","_s","sourceCode","setSourceCode","activeTab","setActiveTab","output","setOutput","tokens","setTokens","generatedCode","setGeneratedCode","loading","setLoading","error","setError","showExamples","setShowExamples","selectedCategory","setSelectedCategory","selectedExample","setSelectedExample","useEffect","exampleCategories","basics","examples","code","compileCode","response","post","data","success","executionOutput","executionError","err","_err$response","_err$response$data","errorMsg","renderContent","OutputArea","children","fileName","_jsxFileName","lineNumber","columnNumber","length","join","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Videos/ebpl-mern-compiler/frontend/src/components/Compiler.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Play, Save, Download, RotateCcw, BookOpen } from 'lucide-react';\r\n\r\n// ... (keep all your existing styled components)\r\n\r\nfunction Compiler() {\r\n  const [sourceCode, setSourceCode] = useState('');\r\n  const [activeTab, setActiveTab] = useState('output');\r\n  const [output, setOutput] = useState('');\r\n  const [tokens, setTokens] = useState([]);\r\n  const [generatedCode, setGeneratedCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [showExamples, setShowExamples] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('basics');\r\n  const [selectedExample, setSelectedExample] = useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Load a basic example when component mounts\r\n    setSourceCode(exampleCategories.basics.examples[0].code);\r\n  }, []);\r\n\r\n  const compileCode = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setOutput('');\r\n    setTokens([]);\r\n    setGeneratedCode('');\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/compiler/compile', {\r\n        sourceCode\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setTokens(response.data.tokens || []);\r\n        setGeneratedCode(response.data.generatedCode || '');\r\n        \r\n        // Show execution output if available\r\n        if (response.data.executionOutput) {\r\n          setOutput(response.data.executionOutput);\r\n        } else if (response.data.executionError) {\r\n          setOutput(`Execution Error:\\n${response.data.executionError}`);\r\n        } else {\r\n          setOutput('Compilation successful! Check the other tabs for details.');\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Compilation failed');\r\n        setOutput(`Compilation Error: ${response.data.error}`);\r\n      }\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || 'Failed to compile code';\r\n      setError(errorMsg);\r\n      setOutput(`Error: ${errorMsg}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ... (keep all your other functions: clearAll, saveSnippet, loadExample, copyToClipboard, renderContent)\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'output':\r\n        return <OutputArea>{output || 'Output will appear here after compilation...'}</OutputArea>;\r\n      case 'tokens':\r\n        return (\r\n          <OutputArea>\r\n            {tokens.length > 0 ? tokens.join('\\n') : 'No tokens generated yet...'}\r\n          </OutputArea>\r\n        );\r\n      case 'generated':\r\n        return <OutputArea>{generatedCode || 'No generated code yet...'}</OutputArea>;\r\n      default:\r\n        return <OutputArea>{output}</OutputArea>;\r\n    }\r\n  };\r\n\r\n  // ... (rest of your component JSX)\r\n}\r\n\r\nexport default Compiler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}